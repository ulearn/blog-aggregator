<?php

/**
 * Implementation of hook_menu()
 */
function mistix_custom_menu() {

  $items = array();

  $items['node/%node/ajaxload'] = array(
      'title' => 'Ajax view',
      'access arguments' => array('access content'),
      'page arguments' => array(1),
      'page callback' => 'mistix_node_ajax_page',
      'type' => MENU_CALLBACK,
  );

  $items['undefined'] = array(
      'title' => 'Undefined',
      'access arguments' => array('access content'),
      'page callback' => 'mistix_page_undefined',
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function mistix_page_undefined() {
  return '';
}

function mistix_node_ajax_page($node) {
  if (isset($node) && isset($node->type) && in_array($node->type, array('portfolio', 'blog'))) {
    print theme('mistix_custom_node_ajax', array('node' => $node));
  }
  exit();
}

function mistix_custom_theme($existing, $type, $theme, $path) {

  return array(
      'mistix_custom_homme_recent_block' => array(
          'variables' => array('nodes' => NULL),
          'template' => 'mistix_custom_homme_recent_block',
      ),
      'mistix_custom_node_ajax' => array(
          'variables' => array('node' => NULL),
          'template' => 'mistix_custom_node_ajax',
      ),
  );
}

function mistix_format_comma_field($field_category, $node) {
  $category_arr = array();
  $category = '';
  if (!empty($node->{$field_category}[LANGUAGE_NONE])) {
    foreach ($node->{$field_category}[LANGUAGE_NONE] as $item) {
      $term = taxonomy_term_load($item['tid']);
      if ($term) {
        $category_arr[] = l($term->name, 'taxonomy/term/' . $item['tid']);
      }
    }
  }
  $category = implode(', ', $category_arr);

  return $category;
}

function mistix_format_image_field($field_name, $node) {
  if (!isset($node->{$field_name}[LANGUAGE_NONE]) || empty($node->{$field_name}[LANGUAGE_NONE])) {
    return false;
  }
  $images = $node->{$field_name}[LANGUAGE_NONE];
  $html = '';
  if (count($images) > 1) {
    $html .= '<div class="gallery-single">';
    foreach ($images as $img) {
      $html .= '<div class="image-gallery">
        <a title="' . $node->title . '" href="' . file_create_url($img['uri']) . '" rel="lightbox[single-gallery]">
        <div class="over"></div>' . theme('image_style', array('style_name' => 'gallery_small', 'path' => $img['uri'])) . '</a>
        </div>';
    }
    $html .= '</div>'; // closed gallery-single
  } else {
    $img = $node->{$field_name}[LANGUAGE_NONE][0];
    $html .= '<div class="blogsingleimage">
      <a rel="lightbox" href="' . file_create_url($img['uri']) . '">' . theme('image_style', array('style_name' => 'blog_teaser', 'path' => $img['uri'])) . '</a>
        </div>';
  }

  return $html;
}

/**
 * Implementation of hook_block_info()
 */
function mistix_custom_block_info() {


  $blocks['home_recent'] = array(
      'info' => t('Home Recent'),
  );

  return $blocks;
}

function mistix_custom_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {


    case 'home_recent':
      if (user_access('access content')) {
        $block['subject'] = t('Home recent');
        $node_blog = db_query('SELECT n.nid FROM {node} n INNER JOIN {field_data_field_image} im ON im.entity_id = n.nid WHERE n.type = :type AND n.status = 1 ORDER BY n.created DESC LIMIT 0,4', array(':type' => 'blog'))->fetchCol();
        $node_portfolio = db_query('SELECT n.nid FROM {node} n INNER JOIN {field_data_field_portfolio_image} im ON im.entity_id = n.nid WHERE n.type = :type AND n.status = 1 ORDER BY n.created DESC LIMIT 0,4', array(':type' => 'portfolio'))->fetchCol();
        $nids = array_merge($node_blog, $node_portfolio);
        $nodes = node_load_multiple($nids);

        $block['content'] = array(
            '#theme' => 'mistix_custom_homme_recent_block',
            '#nodes' => $nodes,
        );
      }
      break;
  }
  return $block;
}

/**
 * Implementation of hook_node_view
 */
function mistix_custom_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'portfolio' && $view_mode == 'full') {
    $item = menu_get_item();
    $item['href'] = 'portfolio';
    menu_set_item(NULL, $item);
  }
  if ($node->type == 'blog' && $view_mode == 'full') {
    $item = menu_get_item();
    $item['href'] = 'blog';
    menu_set_item(NULL, $item);
  }
}

/**
 *
 * Hook_form_system_theme_settings_alter()
 */
function mistix_custom_form_system_theme_settings_alter(&$form, &$form_state) {
  // Add a checkbox to toggle the breadcrumb trail.
  $css_color = array(
      'orange' => 'Orange',
      'blue' => 'Blue',
      'green' => 'Green',
      'lightBlue' => 'Light Blue',
      'pink' => 'Pink',
      'purple' => 'Purple',
      'red' => 'Red',
      'yellow' => 'Yellow',
  );

  $form['mistix'] = array(
      '#type' => 'fieldset',
      '#title' => t('Mistix settings')
  );

  $form['mistix']['mistix_color'] = array(
      '#type' => 'select',
      '#options' => $css_color,
      '#title' => t('Theme color style'),
      '#default_value' => theme_get_setting('mistix_color', 'mistix'),
      '#description' => t('Change theme color style'),
  );
}

